-- XP to Level mapping table to fix bugged API level data
-- Based on XP_Levels__1_250__with_50_000_000_cap___Level_1_gap___1_000.csv

-- Create XP levels lookup table
CREATE TABLE IF NOT EXISTS xp_levels (
    level integer PRIMARY KEY,
    xp_required integer NOT NULL,
    cumulative_xp integer NOT NULL,
    xp_min integer NOT NULL,
    xp_max integer NOT NULL
);

-- Create indexes for fast lookups
CREATE INDEX IF NOT EXISTS idx_xp_levels_xp_range ON xp_levels (xp_min, xp_max);
CREATE INDEX IF NOT EXISTS idx_xp_levels_cumulative ON xp_levels (cumulative_xp);

-- Insert XP level mapping data
INSERT INTO xp_levels (level, xp_required, cumulative_xp, xp_min, xp_max) VALUES
(1, 1000, 1000, 1, 1000),
(2, 1000, 2000, 1001, 2000),
(3, 1000, 3000, 2001, 3000),
(4, 1000, 4000, 3001, 4000),
(5, 1000, 5000, 4001, 5000),
(6, 1000, 6000, 5001, 6000),
(7, 1000, 7000, 6001, 7000),
(8, 1000, 8000, 7001, 8000),
(9, 1000, 9000, 8001, 9000),
(10, 1102, 10102, 9001, 10102),
(11, 1327, 11429, 10103, 11429),
(12, 1573, 13002, 11430, 13002),
(13, 1838, 14840, 13003, 14840),
(14, 2124, 16964, 14841, 16964),
(15, 2430, 19394, 16965, 19394),
(16, 2756, 22150, 19395, 22150),
(17, 3102, 25252, 22151, 25252),
(18, 3468, 28720, 25253, 28720),
(19, 3853, 32573, 28721, 32573),
(20, 4259, 36832, 32574, 36832),
(21, 4684, 41516, 36833, 41516),
(22, 5128, 46644, 41517, 46644),
(23, 5593, 52237, 46645, 52237),
(24, 6077, 58314, 52238, 58314),
(25, 6580, 64894, 58315, 64894),
(26, 7103, 71997, 64895, 71997),
(27, 7646, 79643, 71998, 79643),
(28, 8208, 87851, 79644, 87851),
(29, 8789, 96640, 87852, 96640),
(30, 9390, 106030, 96641, 106030),
(31, 10010, 116040, 106031, 116040),
(32, 10649, 126689, 116041, 126689),
(33, 11307, 137996, 126690, 137996),
(34, 11985, 149981, 137997, 149981),
(35, 12682, 162663, 149982, 162663),
(36, 13398, 176061, 162664, 176061),
(37, 14134, 190195, 176062, 190195),
(38, 14888, 205083, 190196, 205083),
(39, 15662, 220745, 205084, 220745),
(40, 16454, 237199, 220746, 237199),
(41, 17266, 254465, 237200, 254465),
(42, 18097, 272562, 254466, 272562),
(43, 18946, 291508, 272563, 291508),
(44, 19815, 311323, 291509, 311323),
(45, 20703, 332026, 311324, 332026),
(46, 21609, 353635, 332027, 353635),
(47, 22535, 376170, 353636, 376170),
(48, 23479, 399649, 376171, 399649),
(49, 24442, 424091, 399650, 424091),
(50, 25424, 449515, 424092, 449515),
(51, 26425, 475940, 449516, 475940),
(52, 27443, 503383, 475941, 503383),
(53, 28480, 531863, 503384, 531863),
(54, 29536, 561399, 531864, 561399),
(55, 30609, 592008, 561400, 592008),
(56, 31701, 623709, 592009, 623709),
(57, 32812, 656521, 623710, 656521),
(58, 33940, 690461, 656522, 690461),
(59, 35087, 725548, 690462, 725548),
(60, 36253, 761801, 725549, 761801),
(61, 37436, 799237, 761802, 799237),
(62, 38638, 837875, 799238, 837875),
(63, 39858, 877733, 837876, 877733),
(64, 41096, 918829, 877734, 918829),
(65, 42352, 961181, 918830, 961181),
(66, 43627, 1004808, 961182, 1004808),
(67, 44920, 1049728, 1004809, 1049728),
(68, 46231, 1095959, 1049729, 1095959),
(69, 47560, 1143519, 1095960, 1143519),
(70, 48908, 1192427, 1143520, 1192427),
(71, 50273, 1242700, 1192428, 1242700),
(72, 51657, 1294357, 1242701, 1294357),
(73, 53059, 1347416, 1294358, 1347416),
(74, 54479, 1401895, 1347417, 1401895),
(75, 55917, 1457812, 1401896, 1457812),
(76, 57373, 1515185, 1457813, 1515185),
(77, 58847, 1574032, 1515186, 1574032),
(78, 60340, 1634372, 1574033, 1634372),
(79, 61850, 1696222, 1634373, 1696222),
(80, 63378, 1759600, 1696223, 1759600),
(81, 64925, 1824525, 1759601, 1824525),
(82, 66489, 1891014, 1824526, 1891014),
(83, 68071, 1959085, 1891015, 1959085),
(84, 69672, 2028757, 1959086, 2028757),
(85, 71290, 2100047, 2028758, 2100047),
(86, 72926, 2172973, 2100048, 2172973),
(87, 74581, 2247554, 2172974, 2247554),
(88, 76253, 2323807, 2247555, 2323807),
(89, 77943, 2401750, 2323808, 2401750),
(90, 79651, 2481401, 2401751, 2481401),
(91, 81377, 2562778, 2481402, 2562778),
(92, 83121, 2645899, 2562779, 2645899),
(93, 84883, 2730782, 2645900, 2730782),
(94, 86662, 2817444, 2730783, 2817444),
(95, 88460, 2905904, 2817445, 2905904),
(96, 90275, 2996179, 2905905, 2996179),
(97, 92109, 3088288, 2996180, 3088288),
(98, 93960, 3182248, 3088289, 3182248),
(99, 95829, 3278077, 3182249, 3278077),
(100, 97716, 3375793, 3278078, 3375793),
-- Continue with levels 101-250...
(101, 99621, 3475414, 3375794, 3475414),
(102, 101543, 3576957, 3475415, 3576957),
(103, 103484, 3680441, 3576958, 3680441),
(104, 105442, 3785883, 3680442, 3785883),
(105, 107418, 3893301, 3785884, 3893301),
(106, 109412, 4002713, 3893302, 4002713),
(107, 111424, 4114137, 4002714, 4114137),
(108, 113454, 4227591, 4114138, 4227591),
(109, 115501, 4343092, 4227592, 4343092),
(110, 117567, 4460659, 4343093, 4460659),
(111, 119650, 4580309, 4460660, 4580309),
(112, 121751, 4702060, 4580310, 4702060),
(113, 123870, 4825930, 4702061, 4825930),
(114, 126006, 4951936, 4825931, 4951936),
(115, 128161, 5080097, 4951937, 5080097),
(116, 130333, 5210430, 5080098, 5210430),
(117, 132523, 5342953, 5210431, 5342953),
(118, 134730, 5477683, 5342954, 5477683),
(119, 136956, 5614639, 5477684, 5614639),
(120, 139199, 5753838, 5614640, 5753838),
(121, 141461, 5895299, 5753839, 5895299),
(122, 143740, 6039039, 5895300, 6039039),
(123, 146036, 6185075, 6039040, 6185075),
(124, 148351, 6333426, 6185076, 6333426),
(125, 150683, 6484109, 6333427, 6484109),
(126, 153033, 6637142, 6484110, 6637142),
(127, 155401, 6792543, 6637143, 6792543),
(128, 157787, 6950330, 6792544, 6950330),
(129, 160190, 7110520, 6950331, 7110520),
(130, 162611, 7273131, 7110521, 7273131),
(131, 165051, 7438182, 7273132, 7438182),
(132, 167507, 7605689, 7438183, 7605689),
(133, 169982, 7775671, 7605690, 7775671),
(134, 172475, 7948146, 7775672, 7948146),
(135, 174985, 8123131, 7948147, 8123131),
(136, 177513, 8300644, 8123132, 8300644),
(137, 180059, 8480703, 8300645, 8480703),
(138, 182623, 8663326, 8480704, 8663326),
(139, 185204, 8848530, 8663327, 8848530),
(140, 187803, 9036333, 8848531, 9036333),
(141, 190420, 9226753, 9036334, 9226753),
(142, 193055, 9419808, 9226754, 9419808),
(143, 195708, 9615516, 9419809, 9615516),
(144, 198378, 9813894, 9615517, 9813894),
(145, 201066, 10014960, 9813895, 10014960),
(146, 203772, 10218732, 10014961, 10218732),
(147, 206496, 10425228, 10218733, 10425228),
(148, 209238, 10634466, 10425229, 10634466),
(149, 211997, 10846463, 10634467, 10846463),
(150, 214774, 11061237, 10846464, 11061237),
(151, 217569, 11278806, 11061238, 11278806),
(152, 220382, 11499188, 11278807, 11499188),
(153, 223213, 11722401, 11499189, 11722401),
(154, 226061, 11948462, 11722402, 11948462),
(155, 228928, 12177390, 11948463, 12177390),
(156, 231812, 12409202, 12177391, 12409202),
(157, 234714, 12643916, 12409203, 12643916),
(158, 237634, 12881550, 12643917, 12881550),
(159, 240571, 13122121, 12881551, 13122121),
(160, 243527, 13365648, 13122122, 13365648),
(161, 246500, 13612148, 13365649, 13612148),
(162, 249491, 13861639, 13612149, 13861639),
(163, 252500, 14114139, 13861640, 14114139),
(164, 255527, 14369666, 14114140, 14369666),
(165, 258572, 14628238, 14369667, 14628238),
(166, 261634, 14889872, 14628239, 14889872),
(167, 264714, 15154586, 14889873, 15154586),
(168, 267813, 15422399, 15154587, 15422399),
(169, 270929, 15693328, 15422400, 15693328),
(170, 274063, 15967391, 15693329, 15967391),
(171, 277214, 16244605, 15967392, 16244605),
(172, 280384, 16524989, 16244606, 16524989),
(173, 283571, 16808560, 16524990, 16808560),
(174, 286777, 17095337, 16808561, 17095337),
(175, 290000, 17385337, 17095338, 17385337),
(176, 293241, 17678578, 17385338, 17678578),
(177, 296500, 17975078, 17678579, 17975078),
(178, 299777, 18274855, 17975079, 18274855),
(179, 303072, 18577927, 18274856, 18577927),
(180, 306384, 18884311, 18577928, 18884311),
(181, 309715, 19194026, 18884312, 19194026),
(182, 313063, 19507089, 19194027, 19507089),
(183, 316430, 19823519, 19507090, 19823519),
(184, 319814, 20143333, 19823520, 20143333),
(185, 323216, 20466549, 20143334, 20466549),
(186, 326636, 20793185, 20466550, 20793185),
(187, 330074, 21123259, 20793186, 21123259),
(188, 333530, 21456789, 21123260, 21456789),
(189, 337003, 21793792, 21456790, 21793792),
(190, 340495, 22134287, 21793793, 22134287),
(191, 344004, 22478291, 22134288, 22478291),
(192, 347532, 22825823, 22478292, 22825823),
(193, 351077, 23176900, 22825824, 23176900),
(194, 354641, 23531541, 23176901, 23531541),
(195, 358222, 23889763, 23531542, 23889763),
(196, 361821, 24251584, 23889764, 24251584),
(197, 365438, 24617022, 24251585, 24617022),
(198, 369073, 24986095, 24617023, 24986095),
(199, 372726, 25358821, 24986096, 25358821),
(200, 376397, 25735218, 25358822, 25735218),
(201, 380085, 26115303, 25735219, 26115303),
(202, 383792, 26499095, 26115304, 26499095),
(203, 387517, 26886612, 26499096, 26886612),
(204, 391259, 27277871, 26886613, 27277871),
(205, 395020, 27672891, 27277872, 27672891),
(206, 398798, 28071689, 27672892, 28071689),
(207, 402594, 28474283, 28071690, 28474283),
(208, 406409, 28880692, 28474284, 28880692),
(209, 410241, 29290933, 28880693, 29290933),
(210, 414091, 29705024, 29290934, 29705024),
(211, 417959, 30122983, 29705025, 30122983),
(212, 421845, 30544828, 30122984, 30544828),
(213, 425749, 30970577, 30544829, 30970577),
(214, 429670, 31400247, 30970578, 31400247),
(215, 433610, 31833857, 31400248, 31833857),
(216, 437568, 32271425, 31833858, 32271425),
(217, 441543, 32712968, 32271426, 32712968),
(218, 445536, 33158504, 32712969, 33158504),
(219, 449548, 33608052, 33158505, 33608052),
(220, 453577, 34061629, 33608053, 34061629),
(221, 457624, 34519253, 34061630, 34519253),
(222, 461689, 34980942, 34519254, 34980942),
(223, 465772, 35446714, 34980943, 35446714),
(224, 469873, 35916587, 35446715, 35916587),
(225, 473992, 36390579, 35916588, 36390579),
(226, 478129, 36868708, 36390580, 36868708),
(227, 482283, 37350991, 36868709, 37350991),
(228, 486456, 37837447, 37350992, 37837447),
(229, 490647, 38328094, 37837448, 38328094),
(230, 494855, 38822949, 38328095, 38822949),
(231, 499082, 39322031, 38822950, 39322031),
(232, 503326, 39825357, 39322032, 39825357),
(233, 507589, 40332946, 39825358, 40332946),
(234, 511869, 40844815, 40332947, 40844815),
(235, 516168, 41360983, 40844816, 41360983),
(236, 520484, 41881467, 41360984, 41881467),
(237, 524818, 42406285, 41881468, 42406285),
(238, 529171, 42935456, 42406286, 42935456),
(239, 533541, 43468997, 42935457, 43468997),
(240, 537929, 44006926, 43468998, 44006926),
(241, 542336, 44549262, 44006927, 44549262),
(242, 546760, 45096022, 44549263, 45096022),
(243, 551202, 45647224, 45096023, 45647224),
(244, 555662, 46202886, 45647225, 46202886),
(245, 560141, 46763027, 46202887, 46763027),
(246, 564637, 47327664, 46763028, 47327664),
(247, 569151, 47896815, 47327665, 47896815),
(248, 573684, 48470499, 47896816, 48470499),
(249, 578234, 49048733, 48470500, 49048733),
(250, 582803, 49631536, 49048734, 50000000)
ON CONFLICT (level) DO NOTHING;

-- Create function to get level from XP
CREATE OR REPLACE FUNCTION get_level_from_xp(player_xp integer)
RETURNS integer
LANGUAGE sql
STABLE
PARALLEL SAFE
AS $$
    SELECT COALESCE(
        (SELECT level
         FROM xp_levels
         WHERE player_xp >= xp_min
           AND player_xp <= xp_max
         LIMIT 1),
        CASE
            WHEN player_xp <= 0 THEN 1
            WHEN player_xp > 50000000 THEN 250
            ELSE 1
        END
    );
$$;

-- Create function to get level details from XP
CREATE OR REPLACE FUNCTION get_level_details_from_xp(player_xp integer)
RETURNS TABLE (
    level integer,
    xp_in_level integer,
    xp_for_next integer,
    progress_percent numeric
)
LANGUAGE sql
STABLE
PARALLEL SAFE
AS $$
    WITH level_info AS (
        SELECT
            l.level,
            l.xp_min,
            l.xp_max,
            l.xp_required,
            player_xp - l.xp_min + 1 as xp_in_level,
            l.xp_max - player_xp as xp_for_next
        FROM xp_levels l
        WHERE player_xp >= l.xp_min
          AND player_xp <= l.xp_max
        LIMIT 1
    )
    SELECT
        level,
        xp_in_level,
        xp_for_next,
        ROUND((xp_in_level::numeric / xp_required::numeric) * 100, 2) as progress_percent
    FROM level_info;
$$;

-- Create a view for players with correct levels
CREATE OR REPLACE VIEW players_with_levels AS
SELECT
    p.*,
    get_level_from_xp(p.xp) as calculated_level
FROM players p;

-- Grant permissions on the view
GRANT SELECT ON players_with_levels TO anon, authenticated;

-- Grant permissions
GRANT SELECT ON xp_levels TO anon, authenticated;
GRANT EXECUTE ON FUNCTION get_level_from_xp TO anon, authenticated;
GRANT EXECUTE ON FUNCTION get_level_details_from_xp TO anon, authenticated;

-- Add comments
COMMENT ON TABLE xp_levels IS
    'XP to Level mapping table to correct bugged API level data. Based on official Dawn of War level progression.';

COMMENT ON FUNCTION get_level_from_xp IS
    'Returns the correct level for a given XP value, fixing the API bug where all players show as level 1.';

COMMENT ON FUNCTION get_level_details_from_xp IS
    'Returns detailed level information including progress within current level.';